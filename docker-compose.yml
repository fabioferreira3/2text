version: "3"
services:
    # whisper:
    #     container_name: whisper-app
    #     image: onerahmet/openai-whisper-asr-webservice:latest
    #     extra_hosts:
    #         - "host.docker.internal:host-gateway"
    #     ports:
    #         - "8010:9000"
    #     networks:
    #         - twotext
    #     environment:
    #         ASR_MODEL: "medium.en"
    # whisper-large:
    #     container_name: whisper-large-app
    #     image: onerahmet/openai-whisper-asr-webservice:latest
    #     extra_hosts:
    #         - "host.docker.internal:host-gateway"
    #     ports:
    #         - "8011:9000"
    #     networks:
    #         - twotext
    #     environment:
    #         ASR_MODEL: "large"
    laravel.test:
        container_name: experior-app
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: sail-8.2/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
        volumes:
            - ".:/var/www/html"
        networks:
            - twotext
        depends_on:
            - db
            - redis
    db:
        container_name: experior-db
        image: "postgres:15"
        ports:
            - "8006:5432"
        environment:
            PGPASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_MULTIPLE_DATABASES: postgres,postgres_testing
        volumes:
            - "sail-pgsql:/var/lib/postgresql/data"
           # - "./docker/postgres/create-databases.sql:/docker-entrypoint-initdb.d/10-create-databases.sql"
        networks:
            - twotext
    redis:
        container_name: experior-redis
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - twotext
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
    chromadb:
        container_name: experior-chromadb
        image: "chromadb/chroma"
        ports:
            - "8000:8000"
        environment:
            ALLOW_RESET: true
        networks:
            - twotext
networks:
    twotext:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
